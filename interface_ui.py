# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'interface.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from __future__ import print_function
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QTableWidgetItem
from docxtpl import DocxTemplate
from datetime import date,datetime
import csv
import os

import sqlite3

import subprocess

class Ui_MainWindow(object):
        def setupUi(self, MainWindow):
                MainWindow.setObjectName("MainWindow")
                MainWindow.resize(900, 700)
                MainWindow.setMaximumSize(QtCore.QSize(900, 700))
                MainWindow.setStyleSheet("background-color: rgb(255, 255, 255);")
                self.centralwidget = QtWidgets.QWidget(MainWindow)
                self.centralwidget.setObjectName("centralwidget")
                self.verticalLayout = QtWidgets.QVBoxLayout(self.centralwidget)
                self.verticalLayout.setObjectName("verticalLayout")
                self.frame = QtWidgets.QFrame(self.centralwidget)
                sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
                sizePolicy.setHorizontalStretch(0)
                sizePolicy.setVerticalStretch(0)
                sizePolicy.setHeightForWidth(self.frame.sizePolicy().hasHeightForWidth())
                self.frame.setSizePolicy(sizePolicy)
                self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
                self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
                self.frame.setObjectName("frame")
                self.horizontalLayout = QtWidgets.QHBoxLayout(self.frame)
                self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
                self.horizontalLayout.setSpacing(0)
                self.horizontalLayout.setObjectName("horizontalLayout")
                self.frame_4 = QtWidgets.QFrame(self.frame)
                self.frame_4.setFrameShape(QtWidgets.QFrame.StyledPanel)
                self.frame_4.setFrameShadow(QtWidgets.QFrame.Raised)
                self.frame_4.setObjectName("frame_4")
                self.horizontalLayout_3 = QtWidgets.QHBoxLayout(self.frame_4)
                self.horizontalLayout_3.setContentsMargins(0, 0, 0, 0)
                self.horizontalLayout_3.setSpacing(0)
                self.horizontalLayout_3.setObjectName("horizontalLayout_3")
                self.horizontalLayout.addWidget(self.frame_4, 0, QtCore.Qt.AlignLeft)
                self.frame_5 = QtWidgets.QFrame(self.frame)
                sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Preferred)
                sizePolicy.setHorizontalStretch(0)
                sizePolicy.setVerticalStretch(0)
                sizePolicy.setHeightForWidth(self.frame_5.sizePolicy().hasHeightForWidth())
                self.frame_5.setSizePolicy(sizePolicy)
                self.frame_5.setFrameShape(QtWidgets.QFrame.StyledPanel)
                self.frame_5.setFrameShadow(QtWidgets.QFrame.Raised)
                self.frame_5.setObjectName("frame_5")
                self.horizontalLayout_4 = QtWidgets.QHBoxLayout(self.frame_5)
                self.horizontalLayout_4.setContentsMargins(0, 0, 0, 0)
                self.horizontalLayout_4.setSpacing(0)
                self.horizontalLayout_4.setObjectName("horizontalLayout_4")
                self.label_2 = QtWidgets.QLabel(self.frame_5)
                font = QtGui.QFont()
                font.setFamily("OCR A Extended")
                font.setPointSize(14)
                self.label_2.setFont(font)
                self.label_2.setObjectName("label_2")
                self.horizontalLayout_4.addWidget(self.label_2, 0, QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
                self.horizontalLayout.addWidget(self.frame_5, 0, QtCore.Qt.AlignHCenter)
                self.verticalLayout.addWidget(self.frame, 0, QtCore.Qt.AlignHCenter|QtCore.Qt.AlignTop)
                self.frame_2 = QtWidgets.QFrame(self.centralwidget)
                sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Expanding)
                sizePolicy.setHorizontalStretch(0)
                sizePolicy.setVerticalStretch(0)
                sizePolicy.setHeightForWidth(self.frame_2.sizePolicy().hasHeightForWidth())
                self.frame_2.setSizePolicy(sizePolicy)
                self.frame_2.setFrameShape(QtWidgets.QFrame.StyledPanel)
                self.frame_2.setFrameShadow(QtWidgets.QFrame.Raised)
                self.frame_2.setObjectName("frame_2")
                self.horizontalLayout_5 = QtWidgets.QHBoxLayout(self.frame_2)
                self.horizontalLayout_5.setContentsMargins(10, 0, 10, 10)
                self.horizontalLayout_5.setSpacing(0)
                self.horizontalLayout_5.setObjectName("horizontalLayout_5")
                self.tabWidget = QtWidgets.QTabWidget(self.frame_2)
                self.tabWidget.setStyleSheet("")
                self.tabWidget.setObjectName("tabWidget")
                self.tab = QtWidgets.QWidget()
                self.tab.setObjectName("tab")
                self.verticalLayout_5 = QtWidgets.QVBoxLayout(self.tab)
                self.verticalLayout_5.setObjectName("verticalLayout_5")
                self.frame1 = QtWidgets.QFrame(self.tab)
                self.frame1.setObjectName("frame1")
                self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.frame1)
                self.horizontalLayout_2.setObjectName("horizontalLayout_2")
                self.groupBox = QtWidgets.QGroupBox(self.frame1)
                sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)
                sizePolicy.setHorizontalStretch(0)
                sizePolicy.setVerticalStretch(0)
                sizePolicy.setHeightForWidth(self.groupBox.sizePolicy().hasHeightForWidth())
                self.groupBox.setSizePolicy(sizePolicy)
                self.groupBox.setMinimumSize(QtCore.QSize(500, 0))
                font = QtGui.QFont()
                font.setFamily("OCR A Extended")
                font.setPointSize(16)
                self.groupBox.setFont(font)
                self.groupBox.setObjectName("groupBox")
                self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.groupBox)
                self.verticalLayout_3.setObjectName("verticalLayout_3")
                self.formFrame = QtWidgets.QFrame(self.groupBox)
                self.formFrame.setObjectName("formFrame")
                self.formLayout = QtWidgets.QFormLayout(self.formFrame)
                self.formLayout.setObjectName("formLayout")
                self.label_3 = QtWidgets.QLabel(self.formFrame)
                font = QtGui.QFont()
                font.setFamily("OCR A Extended")
                font.setPointSize(16)
                font.setBold(False)
                self.label_3.setFont(font)
                self.label_3.setObjectName("label_3")
                self.formLayout.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.label_3)
                self.name_box = QtWidgets.QLineEdit(self.formFrame)
                self.name_box.setMinimumSize(QtCore.QSize(0, 0))
                font = QtGui.QFont()
                font.setPointSize(12)
                self.name_box.setFont(font)
                self.name_box.setStyleSheet("QLineEdit{\n"
        "    border: 1px solid grey;\n"
        "    border-radius:3px;\n"
        "    padding:2px;\n"
        "}\n"
        "\n"
        "QLineEdit:hover{\n"
        "    border: 1px solid blue;\n"
        "    border-radius:3px;\n"
        "    padding:2px;\n"
        "}\n"
        "\n"
        "QLineEdit:focus{\n"
        "    border: 1px solid black;\n"
        "    border-radius:3px;\n"
        "    padding:2px;\n"
        "}\n"
        "")
                self.name_box.setText("")
                self.name_box.setClearButtonEnabled(True)
                self.name_box.setObjectName("name_box")
                self.formLayout.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.name_box)
                self.label_4 = QtWidgets.QLabel(self.formFrame)
                font = QtGui.QFont()
                font.setFamily("OCR A Extended")
                font.setPointSize(16)
                font.setBold(False)
                self.label_4.setFont(font)
                self.label_4.setObjectName("label_4")
                self.formLayout.setWidget(1, QtWidgets.QFormLayout.LabelRole, self.label_4)
                self.age_box = QtWidgets.QLineEdit(self.formFrame)
                self.age_box.setMinimumSize(QtCore.QSize(0, 0))
                font = QtGui.QFont()
                font.setPointSize(12)
                self.age_box.setFont(font)
                self.age_box.setStyleSheet("QLineEdit{\n"
        "    border: 1px solid grey;\n"
        "    border-radius:3px;\n"
        "    padding:2px;\n"
        "}\n"
        "\n"
        "QLineEdit:hover{\n"
        "    border: 1px solid blue;\n"
        "    border-radius:3px;\n"
        "    padding:2px;\n"
        "}\n"
        "\n"
        "QLineEdit:focus{\n"
        "    border: 1px solid black;\n"
        "    border-radius:3px;\n"
        "    padding:2px;\n"
        "}\n"
        "")
                self.age_box.setText("")
                self.age_box.setClearButtonEnabled(True)
                self.age_box.setObjectName("age_box")
                self.formLayout.setWidget(1, QtWidgets.QFormLayout.FieldRole, self.age_box)
                self.label_5 = QtWidgets.QLabel(self.formFrame)
                font = QtGui.QFont()
                font.setFamily("OCR A Extended")
                font.setPointSize(16)
                font.setBold(False)
                self.label_5.setFont(font)
                self.label_5.setObjectName("label_5")
                self.formLayout.setWidget(2, QtWidgets.QFormLayout.LabelRole, self.label_5)
                self.h_box = QtWidgets.QLineEdit(self.formFrame)
                self.h_box.setMinimumSize(QtCore.QSize(0, 0))
                font = QtGui.QFont()
                font.setPointSize(12)
                self.h_box.setFont(font)
                self.h_box.setStyleSheet("QLineEdit{\n"
        "    border: 1px solid grey;\n"
        "    border-radius:3px;\n"
        "    padding:2px;\n"
        "}\n"
        "\n"
        "QLineEdit:hover{\n"
        "    border: 1px solid blue;\n"
        "    border-radius:3px;\n"
        "    padding:2px;\n"
        "}\n"
        "\n"
        "QLineEdit:focus{\n"
        "    border: 1px solid black;\n"
        "    border-radius:3px;\n"
        "    padding:2px;\n"
        "}\n"
        "")
                self.h_box.setClearButtonEnabled(True)
                self.h_box.setObjectName("h_box")
                self.formLayout.setWidget(2, QtWidgets.QFormLayout.FieldRole, self.h_box)
                self.label_6 = QtWidgets.QLabel(self.formFrame)
                font = QtGui.QFont()
                font.setFamily("OCR A Extended")
                font.setPointSize(16)
                font.setBold(False)
                self.label_6.setFont(font)
                self.label_6.setObjectName("label_6")
                self.formLayout.setWidget(3, QtWidgets.QFormLayout.LabelRole, self.label_6)
                self.w_box = QtWidgets.QLineEdit(self.formFrame)
                self.w_box.setMinimumSize(QtCore.QSize(0, 0))
                font = QtGui.QFont()
                font.setPointSize(12)
                self.w_box.setFont(font)
                self.w_box.setStyleSheet("QLineEdit{\n"
        "    border: 1px solid grey;\n"
        "    border-radius:3px;\n"
        "    padding:2px;\n"
        "}\n"
        "\n"
        "QLineEdit:hover{\n"
        "    border: 1px solid blue;\n"
        "    border-radius:3px;\n"
        "    padding:2px;\n"
        "}\n"
        "\n"
        "QLineEdit:focus{\n"
        "    border: 1px solid black;\n"
        "    border-radius:3px;\n"
        "    padding:2px;\n"
        "}\n"
        "")
                self.w_box.setClearButtonEnabled(True)
                self.w_box.setObjectName("w_box")
                self.formLayout.setWidget(3, QtWidgets.QFormLayout.FieldRole, self.w_box)
                self.verticalLayout_3.addWidget(self.formFrame, 0, QtCore.Qt.AlignTop)
                self.generate_btn = QtWidgets.QPushButton(self.groupBox)
                self.generate_btn.setMinimumSize(QtCore.QSize(0, 30))
                font = QtGui.QFont()
                font.setFamily("OCR A Extended")
                font.setPointSize(14)
                font.setBold(False)
                self.generate_btn.setFont(font)
                self.generate_btn.setStyleSheet("QPushButton{\n"
        "background-color:white;\n"
        "color:black;\n"
        "border-radius:3px;\n"
        "border:1px solid red;\n"
        "}\n"
        "QPushButton:pressed{\n"
        "background-color:red;\n"
        "color:white;\n"
        "border-radius:3px;\n"
        "border:1px solid red;\n"
        "}\n"
        "")
                self.generate_btn.setObjectName("generate_btn")
                self.verticalLayout_3.addWidget(self.generate_btn)
                self.calculate_btn = QtWidgets.QPushButton(self.groupBox)
                self.calculate_btn.setMinimumSize(QtCore.QSize(0, 30))
                font = QtGui.QFont()
                font.setFamily("OCR A Extended")
                font.setPointSize(14)
                font.setBold(False)
                self.calculate_btn.setFont(font)
                self.calculate_btn.setStyleSheet("QPushButton{\n"
        "background-color:white;\n"
        "color:black;\n"
        "border-radius:3px;\n"
        "border:1px solid green;\n"
        "}\n"
        "QPushButton:pressed{\n"
        "background-color:green;\n"
        "color:white;\n"
        "border-radius:3px;\n"
        "border:1px solid green;\n"
        "}")
                self.calculate_btn.setCheckable(False)
                self.calculate_btn.setAutoDefault(False)
                self.calculate_btn.setDefault(False)
                self.calculate_btn.setFlat(False)
                self.calculate_btn.setObjectName("calculate_btn")
                self.verticalLayout_3.addWidget(self.calculate_btn)
                self.horizontalLayout_2.addWidget(self.groupBox)
                self.widget = AnalogGaugeWidget(self.frame1)
                self.widget.setObjectName("widget")
                self.widget.setMinimumWidth(400)
                self.horizontalLayout_2.addWidget(self.widget, 0, QtCore.Qt.AlignLeft)
                self.verticalLayout_5.addWidget(self.frame1)
                spacerItem = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
                self.verticalLayout_5.addItem(spacerItem)
                self.verticalFrame = QtWidgets.QFrame(self.tab)
                self.verticalFrame.setObjectName("verticalFrame")
                self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.verticalFrame)
                self.verticalLayout_4.setObjectName("verticalLayout_4")
                self.label_7 = QtWidgets.QLabel(self.verticalFrame)
                font = QtGui.QFont()
                font.setFamily("OCR A Extended")
                font.setPointSize(16)
                self.label_7.setFont(font)
                self.label_7.setObjectName("label_7")
                self.verticalLayout_4.addWidget(self.label_7)
                self.livedata_text = QtWidgets.QLabel(self.verticalFrame)
                font = QtGui.QFont()
                font.setFamily("OCR A Extended")
                font.setPointSize(12)
                self.livedata_text.setFont(font)
                self.livedata_text.setObjectName("livedata_text")
                self.verticalLayout_4.addWidget(self.livedata_text)
                self.verticalLayout_5.addWidget(self.verticalFrame, 0, QtCore.Qt.AlignTop)
                self.tabWidget.addTab(self.tab, "")
                self.tab_2 = QtWidgets.QWidget()
                self.tab_2.setObjectName("tab_2")
                self.record_table = QtWidgets.QTableWidget(self.tab_2)
                self.record_table.cellClicked.connect(self.openReport)
                self.record_table.setGeometry(QtCore.QRect(20, 30, 711, 381))
                self.record_table.setStyleSheet("/* Style the table background */\n"
        "QTableWidget {\n"
        "    background-color: #f8f9fa;\n"
        "    gridline-color: #e1e4e8;\n"
        "    border: 1px solid #ddd;\n"
        "}\n"
        "\n"
        "/* Header styling */\n"
        "QHeaderView::section {\n"
        "    background-color: #007bff;\n"
        "    color: white;\n"
        "    font-weight: bold;\n"
        "    padding: 4px;\n"
        "    border: 1px solid #e1e4e8;\n"
        "    border-left: none;\n"
        "}\n"
        "\n"
        "/* Alternating row colors */\n"
        "QTableWidget::item {\n"
        "    background-color: #ffffff;\n"
        "}\n"
        "\n"
        "QTableWidget::item:alternate {\n"
        "    background-color: #f2f2f2;\n"
        "}\n"
        "\n"
        "/* Selected cell background color */\n"
        "QTableWidget::item:selected {\n"
        "    background-color: #ffe8a1;\n"
        "    color: black;\n"
        "}\n"
        "\n"
        "/* Focused cell border */\n"
        "QTableWidget::item:focus {\n"
        "    border: 1px solid #007bff;\n"
        "}\n"
        "\n"
        "/* Scrollbars styling */\n"
        "QScrollBar:vertical {\n"
        "    background-color: #f1f1f1;\n"
        "    width: 12px;\n"
        "    margin: 22px 0 22px 0;\n"
        "    border: 1px solid #dcdcdc;\n"
        "}\n"
        "\n"
        "QScrollBar::handle:vertical {\n"
        "    background-color: #cccccc;\n"
        "    min-height: 20px;\n"
        "    border-radius: 4px;\n"
        "}\n"
        "\n"
        "QScrollBar::handle:vertical:hover {\n"
        "    background-color: #b3b3b3;\n"
        "}\n"
        "\n"
        "QScrollBar::sub-line:vertical,\n"
        "QScrollBar::add-line:vertical {\n"
        "    border: none;\n"
        "    background: none;\n"
        "}\n"
        "\n"
        "QScrollBar:horizontal {\n"
        "    background-color: #f1f1f1;\n"
        "    height: 12px;\n"
        "    border: 1px solid #dcdcdc;\n"
        "}\n"
        "\n"
        "QScrollBar::handle:horizontal {\n"
        "    background-color: #cccccc;\n"
        "    min-width: 20px;\n"
        "    border-radius: 4px;\n"
        "}\n"
        "\n"
        "QScrollBar::handle:horizontal:hover {\n"
        "    background-color: #b3b3b3;\n"
        "}\n"
        "\n"
        "QScrollBar::sub-line:horizontal,\n"
        "QScrollBar::add-line:horizontal {\n"
        "    border: none;\n"
        "    background: none;\n"
        "}\n"
        "")
                self.record_table.setObjectName("record_table")
                self.record_table.setColumnCount(0)
                self.record_table.setRowCount(0)
                self.refresh_btn = QtWidgets.QPushButton(self.tab_2)
                self.refresh_btn.setGeometry(QtCore.QRect(20, 430, 171, 31))
                font = QtGui.QFont()
                font.setFamily("OCR A Extended")
                font.setPointSize(12)
                self.refresh_btn.setFont(font)
                self.refresh_btn.setStyleSheet("background-color: rgb(0, 213, 14);\n"
        "color: rgb(255, 255, 255);\n"
        "border-radius:3px;")
                self.refresh_btn.setObjectName("refresh_btn")
                self.tabWidget.addTab(self.tab_2, "")
                self.horizontalLayout_5.addWidget(self.tabWidget)
                self.verticalLayout.addWidget(self.frame_2)
                self.frame_3 = QtWidgets.QFrame(self.centralwidget)
                sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
                sizePolicy.setHorizontalStretch(0)
                sizePolicy.setVerticalStretch(0)
                sizePolicy.setHeightForWidth(self.frame_3.sizePolicy().hasHeightForWidth())
                self.frame_3.setSizePolicy(sizePolicy)
                self.frame_3.setFrameShape(QtWidgets.QFrame.StyledPanel)
                self.frame_3.setFrameShadow(QtWidgets.QFrame.Raised)
                self.frame_3.setObjectName("frame_3")
                self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.frame_3)
                self.verticalLayout_2.setObjectName("verticalLayout_2")
                self.label = QtWidgets.QLabel(self.frame_3)
                font = QtGui.QFont()
                font.setPointSize(8)
                font.setBold(True)
                self.label.setFont(font)
                self.label.setObjectName("label")
                self.verticalLayout_2.addWidget(self.label, 0, QtCore.Qt.AlignBottom)
                self.verticalLayout.addWidget(self.frame_3)
                MainWindow.setCentralWidget(self.centralwidget)

                self.retranslateUi(MainWindow)
                self.tabWidget.setCurrentIndex(0)
                QtCore.QMetaObject.connectSlotsByName(MainWindow)

                
                self.calculate_btn.clicked.connect(self.calculate_click)
                self.generate_btn.clicked.connect(self.generate_click)
                self.refresh_btn.clicked.connect(self.loadSQLiteData)
                QtCore.QMetaObject.connectSlotsByName(MainWindow)

        def loadSQLiteData(self):
                try:
                        # Connect to the SQLite database
                        conn = sqlite3.connect('database/records.db')
                        cursor = conn.cursor()

                        # Fetch all data from the bmi_table
                        cursor.execute('SELECT * FROM bmi_table')
                        data = cursor.fetchall()

                        # Set headers (column names) based on table structure
                        headers = ['Name', 'Age', 'Height', 'BMI', 'ReportPath']
                        self.record_table.setColumnCount(len(headers))
                        self.record_table.setHorizontalHeaderLabels(headers)

                        # Populate the table with data
                        self.record_table.setRowCount(len(data))
                        for row_num, row_data in enumerate(data):
                                for col_num, cell_data in enumerate(row_data):
                                        item = QTableWidgetItem(str(cell_data))  # Convert data to string for display
                                        self.record_table.setItem(row_num, col_num, item)

                        # Close the database connection
                        conn.close()

                except Exception as e:
                        print("Error loading SQLite data:", str(e))


        def generate_click(self):
        
                template = "template_bmi.docx"
                document = DocxTemplate(template)
                
                n = self.name_box.text()
                a = self.age_box.text()
                h = self.h_box.text()
                w = self.w_box.text()
                
                Bmi = round((float(w)/float(h)**2),2)
                
                datet = datetime.today().strftime('%Y%m%d%H%M%S')
                self.insert_data(n, str(a), str(h), str(Bmi),'files/'+datet+'.docx')
                

                if Bmi >= 18.5 and Bmi < 25:
                        document.render({"bmi":str(Bmi),
                                "weight":w,
                                "age":a,
                                "name":n,
                                "height":h,
                                "remark":"As per that you are normal weight"})
                elif Bmi >= 25 and Bmi < 30:
                        document.render({"bmi":str(Bmi),
                                "weight":w,
                                "age":a,
                                "name":n,
                                "height":h,
                                "remark":"As per that you are slightly overweight"})
                        
                elif Bmi >= 30 and Bmi < 40:
                        document.render({"bmi":str(Bmi),
                                "weight":w,
                                "age":a,
                                "name":n,
                                "height":h,
                                "remark":"As per that you are Obese"})
                        
                elif Bmi >= 40 and Bmi < 60:
                        document.render({"bmi":str(Bmi),
                                "weight":w,
                                "age":a,
                                "name":n,
                                "height":h,
                                "remark":"As per that you are Morbidly Obese"})
                
                
                document.save("files/"+datet+".docx")
                
                print("Success!!")
                subprocess.run(["start","files/"+datet+".docx"], shell=True)
                

        # Function to insert data into the table
        def insert_data(self,name, age, height, bmi, report_path):
        # Connect to the SQLite database
                conn = sqlite3.connect('database/records.db')
                cursor = conn.cursor()

                # Insert data into the table
                cursor.execute('''
                INSERT INTO bmi_table (Name, Age, Height, BMI, ReportPath)
                VALUES (?, ?, ?, ?, ?)
                ''', (name, age, height, bmi, report_path))

                # Commit the transaction
                conn.commit()

                # Close the connection
                conn.close()
                print("Data inserted successfully")

                # Example usage
                
        def calculate_click(self):

                h = self.h_box.text()
                w = self.w_box.text()
                bmi = round((float(w)/float(h)**2),2)
                print("BMI" ,bmi)
                self.widget.updateValue(bmi)

                if bmi >= 18.5 and bmi < 25:
                        self.livedata_text.setText(f"Your BMI : {str(bmi)} \nAs per that you are normal weight")
                elif bmi >= 25 and bmi < 30:
                        self.livedata_text.setText(f"Your BMI : {str(bmi)} \nAs per that you are slightly overweight")
                elif bmi >= 30 and bmi < 40:
                        self.livedata_text.setText(f"Your BMI : {str(bmi)} \nAs per that you are Obese")
                elif bmi >= 40 and bmi < 60:
                        self.livedata_text.setText(f"Your BMI : {str(bmi)} \nAs per that you are Morbidly Obese")

        def openReport(self, row, col):
                # Check if the clicked cell is in the last column
                if col == self.record_table.columnCount() - 1:  # Last column index
                # Get the item data and print it
                        item = self.record_table.item(row, col)
                        if item is not None:
                                subprocess.run(["start",item.text()], shell=True)
                

        def retranslateUi(self, MainWindow):
                _translate = QtCore.QCoreApplication.translate
                MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
                self.label_2.setText(_translate("MainWindow", "BMI Calculator & Report Generator"))
                self.groupBox.setTitle(_translate("MainWindow", "Entry Window"))
                self.label_3.setText(_translate("MainWindow", "Name"))
                self.label_4.setText(_translate("MainWindow", "Age/Sex"))
                self.age_box.setPlaceholderText(_translate("MainWindow", "eg 20/M"))
                self.label_5.setText(_translate("MainWindow", "Height(Mts)"))
                self.h_box.setPlaceholderText(_translate("MainWindow", "eg 1.75"))
                self.label_6.setText(_translate("MainWindow", "Weight(Kg)"))
                self.generate_btn.setText(_translate("MainWindow", "🧮 Generate"))
                self.calculate_btn.setText(_translate("MainWindow", "🔄 Calculate"))
                self.label_7.setText(_translate("MainWindow", "Report :"))
                self.livedata_text.setText(_translate("MainWindow", "No  Live Data Uploaded"))
                self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab), _translate("MainWindow", "Main"))
                self.refresh_btn.setText(_translate("MainWindow", "Refresh Data"))
                self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_2), _translate("MainWindow", "Records"))
                self.label.setText(_translate("MainWindow", "Version: 1.0.0"))
from analoggaugewidget import AnalogGaugeWidget
